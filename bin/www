#!/usr/bin/env node

const express = require('express');
const http = require('http');
const path = require('path');
const logger = require('morgan');

const webserver = express();
webserver.use(logger('common'));
webserver.use(express.static(path.join(__dirname, '../dist')));

const port = normalizePort(process.env.PORT || '3000');
webserver.set('port', port);

const server = http.createServer(webserver);

server.listen(port);
server.on('error', onError);

function normalizePort (val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
    default:
      throw error;
  }
}
